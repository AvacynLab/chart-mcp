name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Ruff lint
        run: ruff check .
      - name: Check formatting
        run: |
          black --check src tests
          isort --check-only src tests

  typecheck:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-3.12-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: MyPy
        run: mypy src

  test:
    runs-on: ubuntu-latest
    needs: typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-3.11-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: pytest --cov=src --cov-report=xml
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  mcp-smoke:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-3.11-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Verify MCP registration
        run: |
          python - <<'PY'
          import importlib

          module = importlib.import_module("chart_mcp.mcp_main")

          class DummyServer:
              def __init__(self) -> None:
                  self.names: list[str] = []

              def tool(self, name: str):
                  def decorator(func):
                      self.names.append(name)
                      return func

                  return decorator

          server = DummyServer()
          module.register(server)
          expected = set(module.REGISTERED_TOOL_NAMES)
          missing = sorted(expected - set(server.names))
          if missing:
              raise SystemExit(f"Missing MCP tools: {', '.join(missing)}")
          PY

  docker:
    runs-on: ubuntu-latest
    needs: mcp-smoke
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        run: docker build -f docker/Dockerfile -t chart-mcp:ci .
      - name: Run healthcheck
        env:
          API_TOKEN: testingtoken
        run: |
          docker run -d --rm -p 8000:8000 -e API_TOKEN=$API_TOKEN --name chart-mcp-ci chart-mcp:ci
          sleep 5
          python docker/healthcheck.py
          docker stop chart-mcp-ci
